/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cirugia;

import Conexion.Conexion;
import Models.ModelCarga;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.json.JSONException;
import reporte.ObjetoReporte;
import util.CalculosFecha;
import util.SqlValorCombo;

/**
 *
 * @author djaime
 */
public class DialogoReporte extends javax.swing.JDialog {

    /**
     * Creates new form DialogoReporte
     */
    String usuario;
    int tipoUsuario;
    int idususario = 0;
    boolean cUsusario = false;
    boolean cEstado = false;
    List<Map<String, Object>> listaCirugia;
    SqlValorCombo sqlCombo = null;
    public List<Map<String, Object>> listaComboUsuario;
    public List<Map<String, Object>> listaComboEstado;
    Connection connection;

    public DialogoReporte(java.awt.Frame parent, boolean modal, int idususario, String usuario, int tipoUsuario, List<Map<String, Object>> listaCirugia, Connection connection) {
        super(parent, modal);
        initComponents();
        this.usuario = usuario;
        this.listaCirugia = listaCirugia;
        this.connection = connection;
        this.idususario = idususario;
        this.tipoUsuario = tipoUsuario;
        cargarCombo();
//        cargarTabla(this.listaCirugia);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel1 = new javax.swing.JPanel();
        comboEstado = new javax.swing.JComboBox<>();
        comboUsuario = new javax.swing.JComboBox<>();
        fechaDesde = new com.toedter.calendar.JDateChooser();
        fechaHasta = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        labelUsuario = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        checkESTADO = new javax.swing.JCheckBox();
        checkUSUARIO = new javax.swing.JCheckBox();
        panel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        fechaDesde.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        fechaDesde.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                fechaDesdeAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        fechaDesde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechaDesdeMouseClicked(evt);
            }
        });
        fechaDesde.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fechaDesdemodificarFecha(evt);
            }
        });
        fechaDesde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fechaDesdeKeyPressed(evt);
            }
        });

        fechaHasta.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        fechaHasta.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                fechaHastaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        fechaHasta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechaHastaMouseClicked(evt);
            }
        });
        fechaHasta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fechaHastamodificarFecha(evt);
            }
        });
        fechaHasta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fechaHastaKeyPressed(evt);
            }
        });

        jLabel1.setText("Estado:");

        labelUsuario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelUsuario.setText("Usuario:");

        jButton2.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        checkESTADO.setText("TODO");

        checkUSUARIO.setText("TODO");

        panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte"));
        panel.setLayout(new java.awt.BorderLayout());

        jButton1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkUSUARIO)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(checkESTADO)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)))
                        .addGap(0, 184, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(checkESTADO))
                    .addComponent(fechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsuario)
                    .addComponent(comboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkUSUARIO))
                .addGap(18, 18, 18)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fechaDesdeAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_fechaDesdeAncestorAdded

    }//GEN-LAST:event_fechaDesdeAncestorAdded

//    public void cargarTabla(List<Map<String, Object>> listaCirugia) {
//        tablaReporte.setModel(new ModelCarga(listaCirugia));
//    }

    public void cargarCombo() {
        Conexion conection = new Conexion();
        if (tipoUsuario == 1) {
            this.listaComboUsuario = SqlValorCombo.llenarComboUsusario("select id, usuario from cmt_usuarios_java where tipo IN (1,4)", comboUsuario, "usuario", conection.GetConnection5());
        } else {
            labelUsuario.setVisible(false);
            comboUsuario.setVisible(false);
            checkUSUARIO.setVisible(false);
        }
        this.listaComboEstado = SqlValorCombo.llenarComboPor("select estado, descripcion from cmt_estado", comboEstado, "descripcion", connection);
    }

    private void fechaDesdeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechaDesdeMouseClicked
        System.out.println("Damian");
    }//GEN-LAST:event_fechaDesdeMouseClicked

    private void fechaDesdemodificarFecha(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fechaDesdemodificarFecha
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaDesdemodificarFecha

    private void fechaDesdeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechaDesdeKeyPressed

    }//GEN-LAST:event_fechaDesdeKeyPressed

    private void fechaHastaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_fechaHastaAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaHastaAncestorAdded

    private void fechaHastaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechaHastaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaHastaMouseClicked

    private void fechaHastamodificarFecha(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fechaHastamodificarFecha
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaHastamodificarFecha

    private void fechaHastaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechaHastaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaHastaKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(fechaDesde.getDate() == null || fechaHasta.getDate() == null){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha", "Mensaje del sistema", JOptionPane.WARNING_MESSAGE);
        }else{
            imprimir();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void imprimir() {
        Conexion conection = new Conexion();
        int estado = 0;
        String nombreUsuario = usuario;
        try {
            estado = Integer.valueOf(listaComboEstado.get(comboEstado.getSelectedIndex()).get(".estado").toString());
        } catch (Exception e) {
        }

        try {
            cUsusario = checkUSUARIO.isSelected();
        } catch (Exception e) {
        }

        if (!cUsusario) {
            try {
                idususario = Integer.valueOf(listaComboUsuario.get(comboUsuario.getSelectedIndex()).get(".id").toString());
                nombreUsuario = SqlCirugia.getUsuarioPorId(idususario, conection.GetConnection5());
            } catch (Exception e) {
            }
        }

        cEstado = checkESTADO.isSelected();

        listaCirugia = SqlCirugia.calcularListaCirugiaParaReporte(false, cUsusario, cEstado, idususario, estado, 2, CalculosFecha.transformarFecha(fechaDesde.getDate()), CalculosFecha.transformarFecha(fechaHasta.getDate()), connection);
        JasperPrint jasperprint = null;
        ArrayList<ObjetoReporte> listaObjetoReporte = new ArrayList<>();
        int mensaje2 = JOptionPane.showConfirmDialog(null, "¿Desea imprimir el listado?", "Mensaje del sistema", JOptionPane.OK_OPTION);

        if (mensaje2 == JOptionPane.YES_OPTION) {
            try {
                JasperReport masterReport = null;
                String rutaDestino = "\\\\Ibm3300\\cirugia_mesa_de_ayuda\\sistema\\dist\\reporte\\carga_cirugia_diaria.jasper";
                masterReport = (JasperReport) JRLoader.loadObject(rutaDestino);
                Map params = new HashMap();
                params.put("titulo", "Sistema de carga de cirugias");
                params.put("usuario", nombreUsuario);
                params.put("fecha", CalculosFecha.getFecha());

                for (final Map<String, Object> map : listaCirugia) {
                    int _idusuario = Integer.valueOf(map.get("idusuario").toString());
                    String _nombre = SqlCirugia.getUsuarioPorId(_idusuario, conection.GetConnection5());
                    String hora = map.get("hora").toString() + ":" + map.get("minuto");
                    ObjetoReporte objetoReporte = new ObjetoReporte();
                    objetoReporte.setParametro1(map.get("matricula").toString());
                    objetoReporte.setParametro2(map.get("afiliado").toString());
                    objetoReporte.setParametro3(map.get("nombreafiliado").toString());
                    objetoReporte.setParametro4(map.get("sanatorio").toString());
                    objetoReporte.setParametro5(map.get("practica").toString());
                    objetoReporte.setParametro6(map.get("fechasolicitudDMA").toString());
                    objetoReporte.setParametro9(hora);
                    objetoReporte.setParametro7(map.get("fechavtoDMA").toString());
                    objetoReporte.setParametro8(map.get("estado").toString());
                    objetoReporte.setParametro8(map.get("estado").toString());
                    objetoReporte.setParametro10(_nombre);
                    listaObjetoReporte.add(objetoReporte);
                }
                jasperprint = JasperFillManager.fillReport(masterReport, params, new JRBeanCollectionDataSource(listaObjetoReporte));
                //JasperViewer.viewReport(jasperprint, false);    
                panel.removeAll();
                panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte"));
                JRViewer jw = new JRViewer(jasperprint);
                panel.add(jw);
                panel.setVisible(true);
                panel.updateUI();
            } catch (JRException ex) {
                System.out.println(ex.getMessage());
            } catch (JSONException ex) {
                Logger.getLogger(DialogoReporte.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkESTADO;
    private javax.swing.JCheckBox checkUSUARIO;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.JComboBox<String> comboUsuario;
    private com.toedter.calendar.JDateChooser fechaDesde;
    private com.toedter.calendar.JDateChooser fechaHasta;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
