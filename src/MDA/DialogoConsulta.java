package MDA;

import Login.Login;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import objeto.Cargador;
import util.Reflection;
/**
 *
 * @author lperez
 */
public class DialogoConsulta extends javax.swing.JDialog {
    public List<Map<String, Object>> listaMotivo;
    public String rb = "";
    public String socio;
    public int codme;
    public String fechaIni;
    public String fechaFin;
    public Connection connection = null;
    public Dashboard dashboard;
    public Cargador objetoCargador;
    public Login login;
    public DialogoConsulta consulta;
    public String user = Login.username;
    public String date = "getdate()";
    DialogoABMMotivos dialogo = new DialogoABMMotivos(dashboard, true);

    public DialogoConsulta(java.awt.Frame parent, Cargador objCargador, Dashboard dashboard, Connection connection) {
        super(parent);
        initComponents();
        getFechaIni(connection);
        this.connection = connection;
        this.dashboard = dashboard;
    }

    public void insertConsulta(Connection connection) throws SQLException {
        getFechaFin(connection);

        String insert = "insert into cmt_consultamesa (usuariocmt, nombre, codme, motivo, solucion, fechaini, fechafin, medio, os, observaciones) "
                + "values('" + user + "', '" + txtNombre.getText() + "', '" + txtSocioCargador.getText() + "', '" + txtMotivo.getText() + "', "
                + "'" + rb + "', '" + fechaIni.substring(0, 16) + "', '" + fechaFin.substring(0, 16) + "', '" + txtMedio.getText() + "', '" + txtOS.getText() + "', '" + txtObservaciones.getText() + "')";
        connection.createStatement().execute(insert);
    }

    public void cargarSocio() throws SQLException {
        codme = Integer.parseInt(txtSocioCargador.getText());
        try {
            PreparedStatement ps = connection.prepareStatement("SELECT nombre FROM prestadores WHERE codme = " + codme + "");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                socio = rs.getString(1).trim();
            }
        } catch (SQLException ex) {
        }
    }

    public void getFechaIni(Connection connection) {
        try {
            String query = "select GETDATE() as fechaini";
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                fechaIni = rs.getString(1);
            }
        } catch (SQLException ex) {
        }
    }

    public void getFechaFin(Connection connection) {
        try {
            String query = "select GETDATE() as fechafin";
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                fechaFin = rs.getString(1);
            }
        } catch (SQLException ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtSocioCargador = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtMotivo = new javax.swing.JTextField();
        txtMedio = new javax.swing.JTextField();
        txtObservaciones = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        rbSI = new javax.swing.JRadioButton();
        rbNO = new javax.swing.JRadioButton();
        txtOS = new javax.swing.JTextField();
        ttMedios = new javax.swing.JLabel();
        ttOS = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnMotivos = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Iniciar Consulta");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("N° Socio / Cargador: ");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Motivo Consulta:");

        jLabel4.setText("Obra Soc. / Sistema:");

        jLabel5.setText("Medio de Recepción:");

        jLabel6.setText("Observaciones:");

        txtSocioCargador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSocioCargadorKeyPressed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        txtMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotivoActionPerformed(evt);
            }
        });
        txtMotivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMotivoKeyPressed(evt);
            }
        });

        txtMedio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMedioKeyPressed(evt);
            }
        });

        txtObservaciones.setEnabled(false);
        txtObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtObservacionesKeyPressed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("¿Se resolvió la consulta?");

        buttonGroup1.add(rbSI);
        rbSI.setText("SI");
        rbSI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSIActionPerformed(evt);
            }
        });
        rbSI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rbSIKeyPressed(evt);
            }
        });

        buttonGroup1.add(rbNO);
        rbNO.setText("NO");
        rbNO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNOActionPerformed(evt);
            }
        });
        rbNO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rbNOKeyPressed(evt);
            }
        });

        txtOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOSActionPerformed(evt);
            }
        });
        txtOS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOSKeyPressed(evt);
            }
        });

        ttMedios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tooltip.png"))); // NOI18N
        ttMedios.setToolTipText("T: TELEFONO / W: WHATSAPP / TG: TELEGRAM / C: CORREO / P: PRESENCIAL");

        ttOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tooltip.png"))); // NOI18N
        ttOS.setToolTipText("SS: IPSST / N: NOBIS / PR: PREVENCION / ME: MEDIFE / M: MOSAISTAS / A: ASUNT / O: OSDEPYM P: PRENSA / I: IOSFA / S: SANCOR / C: CMT /  F: SIFO\"");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(rbSI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbNO)
                        .addGap(66, 66, 66))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ttMedios))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSocioCargador, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)))
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMedio, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtMotivo)
                                        .addComponent(txtOS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)))
                        .addComponent(ttOS)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSocioCargador, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLimpiar))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(ttOS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ttMedios, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtOS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMedio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSI)
                    .addComponent(rbNO))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/arrow-left_1.png"))); // NOI18N
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnMotivos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/addc.png"))); // NOI18N
        btnMotivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMotivosActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        btnGuardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnGuardarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMotivos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVolver)
                    .addComponent(btnGuardar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnMotivos)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotivoActionPerformed

    private void txtOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOSActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            insertConsulta(connection);
            this.dispose();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void rbNOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNOActionPerformed
        if (rbNO.isSelected()) {
            rb = "NO";
            txtObservaciones.setEnabled(true);
        }
    }//GEN-LAST:event_rbNOActionPerformed

    private void rbSIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSIActionPerformed
        if (rbSI.isSelected()) {
            rb = "RESUELTO";
            txtObservaciones.setEnabled(false);
            txtObservaciones.setText("");
        }
    }//GEN-LAST:event_rbSIActionPerformed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtNombre.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Campo vacío");
            } else {
                txtMotivo.requestFocus();
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtSocioCargador.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtMotivo.requestFocus();
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtSocioCargadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSocioCargadorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtSocioCargador.getText().equals("S") || txtSocioCargador.getText().equals("s")) {
                txtSocioCargador.setText("SECRETARIA");
                txtNombre.setText("SECRETARIA");
            } else {
                try {
                    cargarSocio();
                    txtNombre.setText(socio);
                    txtSocioCargador.setEnabled(false);
                } catch (SQLException ex) {
                }
            }
            if (txtSocioCargador.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Campo vacío");
            } else {
                txtNombre.requestFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtNombre.requestFocus();
        }
    }//GEN-LAST:event_txtSocioCargadorKeyPressed

    private void txtMotivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMotivoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtMotivo.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Campo vacío");
            } else {
                getMotivo();
                txtOS.requestFocus();
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtOS.requestFocus();
        }
    }//GEN-LAST:event_txtMotivoKeyPressed

    public void getMotivo(){
        try {
            String query = "SELECT * FROM cmt_motivomesa WHERE estado = 1 AND id_motivo = "+txtMotivo.getText()+"";
            ArrayList arrayMotivo = new ArrayList();
            listaMotivo = Reflection.getMapQueryResultByPreparedStatement(query, arrayMotivo, connection);
            if(listaMotivo.size() > 0){
                txtMotivo.setText(listaMotivo.get(0).get(".motivo").toString().trim());
            }else{
                txtMotivo.setText("");
            }
        }
        catch (SQLException ex) {
        }
    }
    
    private void txtOSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOSKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtOS.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Campo vacío");
            } else {
                txtMedio.requestFocus();
                if (txtOS.getText().equals("SS") || txtOS.getText().equals("ss")) {
                    txtOS.setText("IPSST");
                }
                if (txtOS.getText().equals("P") || txtOS.getText().equals("p")) {
                    txtOS.setText("Prensa");
                }
                if (txtOS.getText().equals("I") || txtOS.getText().equals("i")) {
                    txtOS.setText("Iosfa");
                }
                if (txtOS.getText().equals("S") || txtOS.getText().equals("s")) {
                    txtOS.setText("Sancor");
                }
                if (txtOS.getText().equals("C") || txtOS.getText().equals("c")) {
                    txtOS.setText("CMT");
                }
                if (txtOS.getText().equals("F") || txtOS.getText().equals("f")) {
                    txtOS.setText("SIFO");
                }
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtMotivo.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtMedio.requestFocus();
        }
    }//GEN-LAST:event_txtOSKeyPressed

    private void txtMedioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtMedio.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Campo vacío");
            } else {
                if (txtMedio.getText().equals("T") || txtMedio.getText().equals("t")) {
                    txtMedio.setText("Teléfono");
                }
                if (txtMedio.getText().equals("W") || txtMedio.getText().equals("w")) {
                    txtMedio.setText("WhatsApp");
                }
                if (txtMedio.getText().equals("TG") || txtMedio.getText().equals("tg")) {
                    txtMedio.setText("Telegram");
                }
                if (txtMedio.getText().equals("P") || txtMedio.getText().equals("p")) {
                    txtMedio.setText("Presencial");
                }
                if (txtMedio.getText().equals("C") || txtMedio.getText().equals("c")) {
                    txtMedio.setText("Correo");
                }
                rbSI.setSelected(true);
                rbSI.requestFocus();
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtOS.requestFocus();
        }
    }//GEN-LAST:event_txtMedioKeyPressed

    private void txtObservacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObservacionesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtObservaciones.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Campo vacío");
            } else {
                rbSI.setSelected(true);
                rbSI.requestFocus(true);
            }
        }
    }//GEN-LAST:event_txtObservacionesKeyPressed

    private void btnGuardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnGuardarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                insertConsulta(connection);
                this.dispose();
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_btnGuardarKeyPressed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtSocioCargador.setText("");
        txtNombre.setText("");
        txtMotivo.setText("");
        txtOS.setText("");
        txtObservaciones.setText("");
        txtMedio.setText("");
        txtSocioCargador.setEnabled(true);
        txtSocioCargador.requestFocus();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void rbSIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rbSIKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnGuardar.requestFocus();
        }
    }//GEN-LAST:event_rbSIKeyPressed

    private void rbNOKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rbNOKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnGuardar.requestFocus();
        }
    }//GEN-LAST:event_rbNOKeyPressed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnMotivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMotivosActionPerformed
        dialogo.setVisible(true);
    }//GEN-LAST:event_btnMotivosActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnMotivos;
    private javax.swing.JButton btnVolver;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbNO;
    private javax.swing.JRadioButton rbSI;
    private javax.swing.JLabel ttMedios;
    private javax.swing.JLabel ttOS;
    private javax.swing.JTextField txtMedio;
    private javax.swing.JTextField txtMotivo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtOS;
    private javax.swing.JTextField txtObservaciones;
    private javax.swing.JTextField txtSocioCargador;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JTextField getTxtMedio() {
        return txtMedio;
    }

    public void setTxtMedio(javax.swing.JTextField txtMedio) {
        this.txtMedio = txtMedio;
    }

    public javax.swing.JTextField getTxtMotivo() {
        return txtMotivo;
    }

    public void setTxtMotivo(javax.swing.JTextField txtMotivo) {
        this.txtMotivo = txtMotivo;
    }

    public javax.swing.JTextField getTxtNombre() {
        return txtNombre;
    }

    public void setTxtNombre(javax.swing.JTextField txtNombre) {
        this.txtNombre = txtNombre;
    }

    public javax.swing.JTextField getTxtOS() {
        return txtOS;
    }

    public void setTxtOS(javax.swing.JTextField txtOS) {
        this.txtOS = txtOS;
    }

    public javax.swing.JTextField getTxtObservaciones() {
        return txtObservaciones;
    }

    public void setTxtObservaciones(javax.swing.JTextField txtObservaciones) {
        this.txtObservaciones = txtObservaciones;
    }

    public javax.swing.JTextField getTxtSocioCargador() {
        return txtSocioCargador;
    }

    public void setTxtSocioCargador(javax.swing.JTextField txtSocioCargador) {
        this.txtSocioCargador = txtSocioCargador;
    }
}
